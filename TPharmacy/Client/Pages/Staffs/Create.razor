@page "/staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="container mt-5">
    <h1 class="header">Create a new staff</h1>
    <EditForm Model="@staff" OnValidSubmit="CreateStaff">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@staff.StafName" class="form-control" />
                <ValidationMessage For="@(() => staff.StafName)" />
            </div>
        </div>

        <div class="form-group">
            <label>Email: </label>
            <div>
                <InputText @bind-Value="@staff.StafEmail" class="form-control" />
                <ValidationMessage For="@(() => staff.StafEmail)" />
            </div>
        </div>

        <div class="form-group">
            <label>Password: </label>
            <div>
                <InputText @bind-Value="@staff.StafPassword" class="form-control" />
                <ValidationMessage For="@(() => staff.StafPassword)" />
            </div>
        </div>

        <div class="form-group">
            <label>Role: </label>
            <div>
                <InputText @bind-Value="@staff.StafRole" class="form-control" />
                <ValidationMessage For="@(() => staff.StafRole)" />
            </div>
        </div>

        <button type="submit" class="btn btn-success btn-block">
            Create Staff
        </button>
    </EditForm></div>

@code {
    Staff staff = new Staff();

    private async Task CreateStaff()
    {
        await _client.PostAsJsonAsync(Endpoints.StaffsEndpoint, staff);
        _navManager.NavigateTo("/staffs/");
    }
}

